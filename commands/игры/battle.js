const Command = require('../../structures/Command');
const { stripIndents } = require('common-tags');
const { randomRange } = require('../../util/Util');
const { MessageButton, MessageActionRow } = require('discord-buttons');

module.exports = class BattleCommand extends Command {
  constructor(client) {
    super(client, {
      name: 'battle',
      aliases: ['fight', 'dungeon-fight'],
      group: '–∏–≥—Ä—ã',
      memberName: 'battle',
      description: '–°—Ä–∞–∑–∏—Å—å —Å–æ –º–Ω–æ–π! (–∏–ª–∏ —Å –¥—Ä—É–≥–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–º) >:)',
      args: [
        {
          key: 'opponent',
          prompt: '–° –∫–∞–∫–∏–º –∏–≥—Ä–æ–∫–æ–º —Ç—ã —Ö–æ—á–µ—à—å —Å—Ä–∞–∑–∏—Ç—å—Å—è?',
          type: 'user',
          default: () => this.client.user
        }
      ]
    });

    this.fighting = new Set();
  }

  async run(msg, { opponent }) {
    const row = await new MessageActionRow()
      .addComponents(
        new MessageButton()
          .setStyle('red')
          .setEmoji('‚öî')
          .setID('attack'),

        new MessageButton()
          .setStyle('red')
          .setEmoji('üí•')
          .setID('crit'),

        new MessageButton()
          .setStyle('red')
          .setEmoji('üß™')
          .setID('poison'),

        new MessageButton()
          .setStyle('blurple')
          .setEmoji('üõ°')
          .setID('shield')
      );

    const row2 = await new MessageActionRow()
      .addComponents(
        new MessageButton()
          .setStyle('blurple')
          .setEmoji('üßé‚Äç‚ôÇÔ∏è')
          .setID('dodgee'),

        new MessageButton()
          .setStyle('green')
          .setEmoji('ü©π')
          .setID('heal'),

        new MessageButton()
          .setStyle('green')
          .setEmoji('üç∑')
          .setID('potion'),

        new MessageButton()
          .setStyle('gray')
          .setEmoji('üèÉ')
          .setID('run'),
      );

    const row3 = await new MessageActionRow()
      .addComponents(
        new MessageButton()
          .setStyle('green')
          .setLabel('–î–∞')
          .setID('success'),

        new MessageButton()
          .setStyle('red')
          .setLabel('–ù–µ—Ç')
          .setID('fail'),
      );

    if (opponent.id === msg.author.id) return msg.reply('–¢—ã –Ω–µ –º–æ–∂–µ—à—å —Å—Ä–∞–∂–∞—Ç—å—Å—è —Å —Å–∞–º–∏–º —Å–æ–±–æ–π <:What_The:855191667371933716>');
    if (this.fighting.has(msg.channel.id)) return msg.reply('–¢–æ–ª—å–∫–æ –æ–¥–∏–Ω –±–æ–π –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –∫–∞–Ω–∞–ª–µ üõë');
    this.fighting.add(msg.channel.id);
    try {
      if (!opponent.bot) {
        let verificationMessage = await msg.say(`üó° ${opponent}**, —Ç—ã –ø—Ä–∏–Ω–∏–º–∞–µ—à—å –∑–∞–ø—Ä–æ—Å?**`, { components: [row3]});
        const verification = await verificationMessage.awaitButtons((button) => button.clicker.user.id === opponent.id, { max: 1, time: 15000 });
        if(!verification.size) {
          this.fighting.delete(msg.channel.id);
          return await verificationMessage.edit(`*–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞..*`, null);
        } 
        else {
          await verification.first().reply.defer();
          switch (verification.first().id) {
            case 'success':
                verificationMessage.delete();
                break
            case 'fail':
                this.fighting.delete(msg.channel.id);
                return await verificationMessage.edit(`*–û–ø–ø–æ–Ω–µ–Ω—Ç –æ—Ç–∫–∞–∑–∞–ª—Å—è..*`, null);
                break
          }
        }
      }
      let userHP = 750;
      let oppoHP = 750;
      let userTurn = false;
      let dodge = false;

      let startMessage = true;

      let steps = 0;

      let poisonPlayer = false;
      let poisonOpponent = false;
      let guardPlayer = false;
      let guardOpponent = false;
      let playerTime = 0;
      let opponentTime = 0;

      const reset = () => {
        userTurn = !userTurn;
        if (playerTime == 0) guardPlayer = false;
        else playerTime -= 1;
        if (opponentTime == 0) guardOpponent = false;
        else opponentTime -= 1;
      };
      const shield = (userShield = true) => {
        if (userShield && playerTime == 0) {
          guardPlayer = true;
          playerTime = 4
        } else if (!userShield && opponentTime == 0) {
          guardOpponent = true;
          opponentTime = 4
        }
      }
      const dodgee = (sus = true) => {
        if (sus && dodge) dodge = false;
      };
      const dealDamage = damage => {
        if (userTurn) oppoHP -= damage;
        else userHP -= damage;
      };
      const healHp = heal => {
        if (userTurn) userHP += heal;
        else oppoHP += heal;
      };
      const poisonDeal = () => {
        if (userTurn) poisonOpponent = true;
        else poisonPlayer = true;
      };
      const poisonRemove = () => {
        if (userTurn) poisonPlayer = false;
        else poisonOpponent = false;
      };
      const poisonDamage = () => {
        if (poisonOpponent) oppoHP -= 15;
        if (poisonPlayer) userHP -= 15;
      };
      const forfeit = () => {
        if (userTurn) userHP = 0;
        else oppoHP = 0;
      };

      // –ò–≥—Ä–∞
      while (userHP > 0 && oppoHP > 0) {
        if (startMessage) await msg.say('‚öî **–î—É—ç–ª—å –≤ –ü–æ–¥–∑–µ–º–µ–ª—å–µ** ‚öî\n__–£–¥–∞—á–∏!__');
        startMessage = false;
        const user = userTurn ? msg.author : opponent;
        let choice;
        if (!opponent.bot || (opponent.bot && userTurn)) {
          let messge = await msg.say(stripIndents`
						__${user}, —Ç–≤–æ–π —Ö–æ–¥!__\n
						üë§**${msg.author.username}**: __**${userHP}**__ ${((userHP < 600 && userHP > 300) ? ":mending_heart:" : (userHP <= 300 ? ":broken_heart:" : "‚ù§"))} ${(poisonPlayer ? "\`üß™\`" : "")} ${(guardPlayer ? "\`üõ°Ô∏è\`" : "")}\nüë§**${opponent.username}**: __**${oppoHP}**__ ${((oppoHP < 600 && oppoHP > 300) ? ":mending_heart:" : (oppoHP <= 300 ? ":broken_heart:" : "‚ù§"))} ${(poisonOpponent ? "\`üß™\`" : "")} ${(guardOpponent ? "\`üõ°Ô∏è\`" : "")}`, { components: [row, row2] });

          const action = await messge.awaitButtons((button) => button.clicker.user.id === user.id, { max: 1, time: 10000 }).then(async b => {
            await b.first().reply.defer();
            switch (b.first().id) {
              case 'attack':
                choice = '–∞—Ç–∞–∫–∞';
                break
              case 'shield':
                choice = '—â–∏—Ç';
                break
              case 'crit':
                choice = '–∫—Ä–∏—Ç';
                break
              case 'run':
                choice = '—Å–±–µ–∂–∞—Ç—å';
                break
              case 'heal':
                choice = '–ª–µ—á–∏—Ç—å—Å—è';
                break
              case 'poison':
                choice = '–æ—Ç—Ä–∞–≤–∏—Ç—å';
                break
              case 'potion':
                choice = '—ç–ª–∏–∫—Å–∏—Ä';
                break
              case 'dodgee':
                choice = '—É–≤–µ—Ä–Ω—É—Ç—å—Å—è';
                break
            }
            await messge.edit(`__–•–æ–¥ ${user}__, **‚Ññ${steps}**\n**–í—ã–±—Ä–∞–Ω–æ: \`${(choice == `–∞—Ç–∞–∫–∞` ? `‚öîÔ∏è` : (choice == `—â–∏—Ç` ? `üõ°Ô∏è` : (choice == `–∫—Ä–∏—Ç` ? `üí•` : (choice == `—Å–±–µ–∂–∞—Ç—å` ? `üèÉ‚Äç‚ôÇÔ∏è` : (choice == `–ª–µ—á–∏—Ç—å—Å—è` ? `ü©π` : (choice == `–æ—Ç—Ä–∞–≤–∏—Ç—å` ? `üß™` : (choice == `—ç–ª–∏–∫—Å–∏—Ä` ? `üç∑` : `üßé‚Äç‚ôÇÔ∏è`)))))))}\`**\n\n**‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî**\nüë§**${msg.author.username}**: __**${userHP}**__ ${((userHP < 600 && userHP > 300) ? ":mending_heart:" : (userHP <= 300 ? ":broken_heart:" : "‚ù§"))} ${(poisonPlayer ? "\`üß™\`" : "")} ${(guardPlayer ? "\`üõ°Ô∏è\`" : "")}\nüë§**${opponent.username}**: __**${oppoHP}**__ ${((oppoHP < 600 && oppoHP > 300) ? ":mending_heart:" : (oppoHP <= 300 ? ":broken_heart:" : "‚ù§"))} ${(poisonOpponent ? "\`üß™\`" : "")} ${(guardOpponent ? "\`üõ°Ô∏è\`" : "")}\n**‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî**`, null);
          }).catch(async () => {
            await msg.say(`${user} *–ø—Ä–æ–ø—É—Å—Ç–∏–ª —Å–≤–æ–π —Ö–æ–¥..*`);
            await messge.edit(`üë§**${msg.author.username}**: __**${userHP}**__ ${((userHP < 600 && userHP > 300) ? ":mending_heart:" : (userHP <= 300 ? ":broken_heart:" : "‚ù§"))} ${(poisonPlayer ? "\`üß™\`" : "")} ${(guardPlayer ? "\`üõ°Ô∏è\`" : "")}\nüë§**${opponent.username}**: __**${oppoHP}**__ ${((oppoHP < 600 && oppoHP > 300) ? ":mending_heart:" : (oppoHP <= 300 ? ":broken_heart:" : "‚ù§"))} ${(poisonOpponent ? "\`üß™\`" : "")} ${(guardOpponent ? "\`üõ°Ô∏è\`" : "")}\n**‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî**`, null);
            poisonDamage();
            dodgee();
            reset();
            steps++;
          });
        } else {
          if (oppoHP <= 150) {
            if (poisonOpponent) choice = '—ç–ª–∏–∫—Å–∏—Ä';
            else choice = '–ª–µ—á–∏—Ç—å—Å—è';
          } else if ((userHP / 1.75) > oppoHP) {
            const rando = Math.random() < 0.5;
            if (poisonOpponent) {
              if (rando) choice = '—ç–ª–∏–∫—Å–∏—Ä';
              else choice = '–ª–µ—á–∏—Ç—å—Å—è'
            }
            else if (!poisonPlayer) {
              if (!rando) choice = '–æ—Ç—Ä–∞–≤–∏—Ç—å';
              else choice = '–∞—Ç–∞–∫–∞'
            }
            else if (!poisonOpponent && poisonPlayer) {
              if (rando) choice = '–ª–µ—á–∏—Ç—å—Å—è';
              else choice = '–∞—Ç–∞–∫–∞'
            }
          } else {
            const choices = ['–∞—Ç–∞–∫–∞', '—â–∏—Ç', '–∫—Ä–∏—Ç', '–ª–µ—á–∏—Ç—å—Å—è', '–æ—Ç—Ä–∞–≤–∏—Ç—å', '—É–≤–µ—Ä–Ω—É—Ç—å—Å—è'];
            const choices2 = ['–∞—Ç–∞–∫–∞', '—â–∏—Ç', '–∫—Ä–∏—Ç', '–ª–µ—á–∏—Ç—å—Å—è', '—É–≤–µ—Ä–Ω—É—Ç—å—Å—è'];
            if (poisonOpponent) choice = '—ç–ª–∏–∫—Å–∏—Ä';
            else if (!poisonPlayer) choice = choices[Math.floor(Math.random() * choices.length)];
            else if (poisonPlayer) choice = choices2[Math.floor(Math.random() * choices.length)];
          }
        }
        if (choice === '–∞—Ç–∞–∫–∞') {
          const damage = Math.floor(Math.random() * (userTurn ? (guardOpponent ? 50 : 125) : (guardPlayer ? 50 : 125))) + 1;
          const random = Math.random() < 0.5;
          if (dodge) {
            if (random) {
              msg.say(`‚Üù ${user} *–Ω–µ —Å–º–æ–≥ –ø–æ–ø–∞—Å—Ç—å –ø–æ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫—É*`);
            } else {
              await msg.say(`‚öîÔ∏è ${user} *–∞—Ç–∞–∫–æ–≤–∞–ª* **\`-${damage}‚ù§\`**`);
              dealDamage(damage);
            }
          }
          else {
            await msg.say(`‚öîÔ∏è ${user} *–∞—Ç–∞–∫–æ–≤–∞–ª* **\`-${damage}‚ù§\`**`);
            dealDamage(damage);
          }
          dodgee();
          poisonDamage();
          reset();
          steps++;
        } else if (choice === '—â–∏—Ç') {
          await msg.say(`üõ°Ô∏è ${user} *–∑–∞—â–∏—Ç–∏–ª—Å—è*`);
          shield(userTurn);
          poisonDamage();
          dodgee();
          reset(false);
          steps++;
        } else if (choice === '—É–≤–µ—Ä–Ω—É—Ç—å—Å—è') {
          await msg.say(`üßé‚Äç‚ôÇÔ∏è ${user} *–ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª—Å—è —É–≤–æ—Ä–∞—á–∏–≤–∞—Ç—å—Å—è*`);
          dodge = true;
          poisonDamage();
          reset();
        } else if (choice === '–ª–µ—á–∏—Ç—å—Å—è') {
          const heal = Math.floor(Math.random() * 125) + 1;
          if ((userHP > 1000 && userTurn) || (oppoHP > 1000 && !userTurn)) { msg.say('**–î–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥ ‚ù§!**') }
          else {
            await msg.say(`ü©π ${user} *–ø–æ–ª–µ—á–∏–ª—Å—è* **\`+${heal}‚ù§\`**`);
            healHp(heal);
            poisonDamage();
            dodgee();
            reset();
            steps++;
          }
        } else if (choice === '—ç–ª–∏–∫—Å–∏—Ä') {
          if (poisonPlayer && userTurn) {
            await msg.say(`üç∑ ${user} *–≤—ã–ø–∏–ª —ç–ª–∏–∫—Å–∏—Ä*`);
            poisonRemove();
            dodgee();
            reset();
            steps++;
          } else if (!poisonPlayer && userTurn) msg.say(`**–£ –≤–∞—Å –Ω–µ—Ç –æ—Ç—Ä–∞–≤–ª–µ–Ω–∏—è!**`)
          else if (poisonOpponent && !userTurn) {
            await msg.say(`üç∑ ${user} *–≤—ã–ø–∏–ª —ç–ª–∏–∫—Å–∏—Ä*`);
            poisonRemove();
            dodgee();
            reset();
            steps++;
          } else if (!poisonOpponent && !userTurn) msg.say(`**–£ –≤–∞—Å –Ω–µ—Ç –æ—Ç—Ä–∞–≤–ª–µ–Ω–∏—è!**`)
        } else if (choice === '–æ—Ç—Ä–∞–≤–∏—Ç—å') {
          if (!poisonOpponent && userTurn) {
            await msg.say(`üß™ ${user} *–æ—Ç—Ä–∞–≤–∏–ª –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞*`);
            poisonDeal();
            dodgee();
            reset();
            steps++;
          } else if (!poisonPlayer && !userTurn) {
            await msg.say(`üß™ ${user} *–æ—Ç—Ä–∞–≤–∏–ª –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞*`);
            poisonDeal();
            dodgee();
            reset();
            steps++;
          } else if (poisonOpponent && userTurn) {
            msg.say(`**–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ —É–∂–µ –æ—Ç—Ä–∞–≤–ª—ë–Ω!**`);
          } else if (poisonPlayer && !userTurn) {
            msg.say(`**–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ —É–∂–µ –æ—Ç—Ä–∞–≤–ª—ë–Ω!**`);
          }
        } else if (choice === '–∫—Ä–∏—Ç') {
          const miss = Math.floor(Math.random() * 5);
          if (!miss) {
            const damage = randomRange(userTurn ? (guardOpponent ? 100 : 175) : (guardPlayer ? 100 : 175), userTurn ? (guardOpponent ? 175 : 250) : (guardPlayer ? 175 : 250));
            await msg.say(`üí• ${user} *–Ω–∞–Ω—ë—Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É–¥–∞—Ä!* **\`-${damage}‚ù§\`**`);
            dealDamage(damage);
          } else {
            await msg.say(`‚Üù ${user} *–ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è..*`);
          }
          poisonDamage();
          dodgee();
          reset();
          steps++;
        } else if (choice === '—Å–±–µ–∂–∞—Ç—å') {
          await msg.say(`üèÉ‚Äç‚ôÇÔ∏è ${user} *–ø—Ä–∏–∑–Ω–∞–ª —Å–≤–æ—ë –ø–æ—Ä–∞–∂–µ–Ω–∏–µ..*`);
          forfeit();
          steps++;
          break;
        }
      }
      this.fighting.delete(msg.channel.id);
      const winner = userHP > oppoHP ? msg.author : opponent;
      const messages = ["–ù–∞–π—Å", "–ö—É–ª", "–ì–ì", "–•–æ—Ä–æ—à", "–µ–µ–µ–µ", "–•–æ—Ä–æ—à–æ —Å—ã–≥—Ä–∞–ª–∏", "–ï—â—ë –∫–∞—Ç–∫—É?", "–æ–∫", "–ï–±–æ–π", "—ã—ã—ã", "–ì—É–¥ –≥–µ–π–º", ":)", "–ù–∏—á–æ—Å–∏", "–ª—è", "–ú–æ–≥—ë—à—å", ".", "–ª–∞–¥–Ω–æ.", "<:Da:802954217190326312>", "<:Oxyeti_Ne_Vixyeti:889208289575964702>", "<:Strange_Cat:761627017988145202>"];
      const randomMessage = messages[Math.floor(Math.random() * messages.length)];
      if (winner.bot) msg.say(`**–ú–∞—Ç—á –æ–∫–æ–Ω—á–µ–Ω!**\n–ü–æ–±–µ–¥–∏—Ç–µ–ª—å: ${winner}! üéä\n–•–∞—Ö–∞, —è —É–º–Ω–µ–µ —Ç–µ–±—è! –£ –º–µ–Ω—è –ø–∞–º—è—Ç–∏ 16 –º–µ–≥–∞–±–∞–π—Ç!`);
      else msg.say(`**–ú–∞—Ç—á –æ–∫–æ–Ω—á–µ–Ω!**\n–ü–æ–±–µ–¥–∏—Ç–µ–ª—å: ${winner}! üéä`);
      msg.say(`–†–∞–Ω–¥–æ–º–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç –º–µ–Ω—è: ${randomMessage}`);
      return;
    } catch (err) {
      this.fighting.delete(msg.channel.id);
      throw err;
    }
  }
};