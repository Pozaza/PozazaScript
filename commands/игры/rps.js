const Command = require('../../structures/Command');
const { MessageButton, MessageActionRow } = require('discord-buttons');
const choices = ['–∫–∞–º–µ–Ω—å', '–Ω–æ–∂–Ω–∏—Ü—ã', '–±—É–º–∞–≥–∞'];

module.exports = class RockPaperScissorsCommand extends Command {
	constructor(client) {
		super(client, {
			name: 'rps',
			aliases: ['rps'],
			group: '–∏–≥—Ä—ã',
			memberName: 'rps',
			description: '–ö–∞–º–µ–Ω—å.. –ù–æ–∂–Ω–∏—Ü—ã.. –ë—É–º–∞–≥–∞!'
		});
	}

	async run(msg) {
    const row = await new MessageActionRow()
      .addComponents(
        new MessageButton()
          .setStyle('gray')
          .setEmoji('ü™®')
          .setID('rock'),

        new MessageButton()
          .setStyle('red')
          .setEmoji('‚úÇ')
          .setID('scissors'),

        new MessageButton()
          .setStyle('green')
          .setEmoji('üì∞')
          .setID('paper')
      );
      let messge = await msg.say(`**–í—ã–±–∏—Ä–∞–π:**`, { components: [row] });
		const response = choices[Math.floor(Math.random() * choices.length)];
    const choise = await messge.awaitButtons((button) => button.clicker.user.id === msg.author.id, { max: 1, time: 10000 });
    if(!choise.size) {
      await messge.edit(`*–≠—Ç–æ –ø—Ä–∞–≤–¥–∞ —Ç–∞–∫–æ–π —Ç—Ä—É–¥–Ω—ã–π –≤—ã–±–æ—Ä?..*\n(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –¥—É–º–∞–ª)`, null);
    } 
    else {
      await choise.first().reply.defer();
      switch (choise.first().id) {
        case 'rock':
          if (response === '–∫–∞–º–µ–Ω—å') {
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** ü™®`, null);
            let timer = await new Promise(promise => {setTimeout(promise, 1000)});
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** ü™®\n**–Ø –≤—ã–±—Ä–∞–ª:** ü™®`, null);
            timer = await new Promise(promise => {setTimeout(promise, 500)});
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** ü™®\n**–Ø –≤—ã–±—Ä–∞–ª:** ü™®\n\n__–ü–æ–±–µ–¥–∏—Ç–µ–ª—å - –Ω–∏—á—å—è..__`, null);
          }
			    else if (response === '–±—É–º–∞–≥–∞') {
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** ü™®`, null);
            let timer = await new Promise(promise => {setTimeout(promise, 1000)});
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** ü™®\n**–Ø –≤—ã–±—Ä–∞–ª:** üì∞`, null);
            timer = await new Promise(promise => {setTimeout(promise, 500)});
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** ü™®\n**–Ø –≤—ã–±—Ä–∞–ª:** üì∞\n\n__–ü–æ–±–µ–¥–∏—Ç–µ–ª—å - —è!__`, null);
          }
			    else if (response === '–Ω–æ–∂–Ω–∏—Ü—ã') {
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** ü™®`, null);
            let timer = await new Promise(promise => {setTimeout(promise, 1000)});
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** ü™®\n**–Ø –≤—ã–±—Ä–∞–ª:** ‚úÇ`, null);
            timer = await new Promise(promise => {setTimeout(promise, 500)});
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** ü™®\n**–Ø –≤—ã–±—Ä–∞–ª:** ‚úÇ\n\n__–ü–æ–±–µ–¥–∏—Ç–µ–ª—å - ${msg.author}!__`, null);
          }
        break
        case 'scissors':
          if (response === '–∫–∞–º–µ–Ω—å') {
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** ‚úÇ`, null);
            let timer = await new Promise(promise => {setTimeout(promise, 1000)});
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** ‚úÇ\n**–Ø –≤—ã–±—Ä–∞–ª:** ü™®`, null);
            timer = await new Promise(promise => {setTimeout(promise, 500)});
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** ‚úÇ\n**–Ø –≤—ã–±—Ä–∞–ª:** ü™®\n\n__–ü–æ–±–µ–¥–∏—Ç–µ–ª—å - —è!__`, null);
          }
			    else if (response === '–±—É–º–∞–≥–∞') {
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** ‚úÇ`, null);
            let timer = await new Promise(promise => {setTimeout(promise, 1000)});
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** ‚úÇ\n**–Ø –≤—ã–±—Ä–∞–ª:** üì∞`, null);
            timer = await new Promise(promise => {setTimeout(promise, 500)});
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** ‚úÇ\n**–Ø –≤—ã–±—Ä–∞–ª:** üì∞\n\n__–ü–æ–±–µ–¥–∏—Ç–µ–ª—å - ${msg.author}!__`, null);
          }
			    else if (response === '–Ω–æ–∂–Ω–∏—Ü—ã') {
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** ‚úÇ`, null);
            let timer = await new Promise(promise => {setTimeout(promise, 1000)});
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** ‚úÇ\n**–Ø –≤—ã–±—Ä–∞–ª:** ‚úÇ`, null);
            timer = await new Promise(promise => {setTimeout(promise, 500)});
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** ‚úÇ\n**–Ø –≤—ã–±—Ä–∞–ª:** ‚úÇ\n\n__–ü–æ–±–µ–¥–∏—Ç–µ–ª—å - –Ω–∏—á—å—è..__`, null);
          }
        break
        case 'paper':
          if (response === '–∫–∞–º–µ–Ω—å') {
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** üì∞`, null);
            let timer = await new Promise(promise => {setTimeout(promise, 1000)});
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** üì∞\n**–Ø –≤—ã–±—Ä–∞–ª:** ü™®`, null);
            timer = await new Promise(promise => {setTimeout(promise, 500)});
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** üì∞\n**–Ø –≤—ã–±—Ä–∞–ª:** ü™®\n\n__–ü–æ–±–µ–¥–∏—Ç–µ–ª—å - ${msg.author}!__`, null);
          }
			    else if (response === '–±—É–º–∞–≥–∞') {
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** üì∞`, null);
            let timer = await new Promise(promise => {setTimeout(promise, 1000)});
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** üì∞\n**–Ø –≤—ã–±—Ä–∞–ª:** üì∞`, null);
            timer = await new Promise(promise => {setTimeout(promise, 500)});
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** üì∞\n**–Ø –≤—ã–±—Ä–∞–ª:** üì∞\n\n__–ü–æ–±–µ–¥–∏—Ç–µ–ª—å - –Ω–∏—á—å—è..__`, null);
          }
			    else if (response === '–Ω–æ–∂–Ω–∏—Ü—ã') {
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** üì∞`, null);
            let timer = await new Promise(promise => {setTimeout(promise, 1000)});
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** üì∞\n**–Ø –≤—ã–±—Ä–∞–ª:** ‚úÇ`, null);
            timer = await new Promise(promise => {setTimeout(promise, 500)});
            await messge.edit(`${msg.author} **–≤—ã–±—Ä–∞–ª:** üì∞\n**–Ø –≤—ã–±—Ä–∞–ª:** ‚úÇ\n\n__–ü–æ–±–µ–¥–∏—Ç–µ–ª—å - —è!__`, null);
          }
        break
      }
    }
	}
};
